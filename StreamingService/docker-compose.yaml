services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    depends_on:
      - mongo
#      - rabbitmq
    volumes:
      - ./media:/app/media
    environment:
      - spring.data.mongodb.uri=mongodb://root:example@mongo:27017/3ateya_and_Co?authSource=admin
      - spring.data.mongodb.database=3ateya_and_Co
    restart: always

  # MongoDB
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: 3ateya_and_Co
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "9000:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    depends_on:
      - mongo


#  redis_cache:
#    image: redis:latest
#    container_name: redisCache
#    ports:
#      - "6379:6379"
#
#  redisinsight:
#    image: redis/redisinsight:latest
#    container_name: redisInsight
#    ports:
#      - "5540:5540"
#    restart: always

#  rabbitmq:
#    image: rabbitmq:4.0-management
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"     # RabbitMQ protocol (AMQP)
#      - "15672:15672"   # Management UI
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest

